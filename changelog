09/01/23
    Definición de clases, estructura general del proyecto.
    La clase InputHandler probablemente no sea necesaria.
    Sentimiento de arrepentimiento por la escala del juego. Debería haberme limitado a un Space Invaders.
11/01/23
    Reestructuración del proyecto y de los planteamientos. Algunas ideas no eran tan buenas en retrospectiva.
    Se opta por cambiar la orientación del juego a vertical, se aprovecha mucho mejor el espacio.
    El espacio para la UI es un problema, hay que simplificar la interfaz y el número de espacios que se
    pueden pulsar planteados.
    Creación del tilemap del primer nivel en Tiled, y renderizado con éxito.
    Falta la capa de objetos del Tiled.
13/01/23
    Se elimina InputHandler, al menos por ahora. Demasiado caos de clases.
    Nueva clase: LevelCreator. Gestiona la carga de cada mapa y parsea la capa de objetos de
    los mapas del Tiled.
    Se replantean algunos conceptos del juego. Las colisiones entre unidades limitan el diseño,
    se deshechan. Ahora puedo añadir torres que reduzcan la velocidad de los enemigos sin preocuparme por
    que se hagan bodyblocking entre ellos.
17/01/23
    Reestructuración del mapa en el Tiled. Organización de las capas de objetos, ajustados los hitbox.
    Definición de las clases de enemigos, de la clase Tile, Direction y Type.
    Definición de la clase Tower, pero le falta trabajo.
    Se crea la clase Debuff para gestionar estados especiales que las torres ponen en los enemigos.
    Definición clase Stats para guardar variables útiles.
    Se hace una primera prueba básica del funcionamiento del juego con un solo enemigo
    y sin torres, ¡funciona!
18/01/23
    Los enemigos ya son capaces de navegar el nivel siguiendo el camino sin mayor problema.
    Probando la velocidad de los enemigos hasta encontrar el balance correcto.
    Hay que hacer limpieza del código, las variables están en público y privado sin mucho sentido.
    Los proyectiles de las torres presentan un nuevo desafío. Debo pensar como plantearlo.
23/01/23
    Spritesheets para todos los enemigos.
    Nueva clase WaveManager para gestionar comodamente las oleadas.
    Los enemigos ahora desaparecen al llegar al final del nivel.
    Limpieza general de código en las clases de Enemy y derivadas.
24/01/23
    Spritesheets para todas las torres.
    Definición de clases para las torres WitchTower, StickyTower y CyclopTower, con sus correspondientes estadísticas en Stats.
28/01/23
    Los proyectiles de las torres, tras mucho esfuerzo, vuelan gracilmente de la torre a su objetivo sin problema. Un hurra para mí.
    Prueba y error para encontrar un balance provisional para las stats de las torres. Necesitaré seguir toqueteandolo a medida que avanza el desarrollo.
30/01/23
    He descubierto una forma de aprovechar mejor libGDX y la gestión de eventos sin tantas clases auxiliares gracias a las clases Stage y Actor propias del framework.
    El core gameplay más básico esta listo: Los enemigos se mueven, las torres disparan, el jugador puede construir nuevas torres.
    Añadida la clase GameUi para gestionar las acciones del jugador, botones y demás.
    ¿Como va a ser el menu desplegable para seleccionar que torreta construir? Probablemente use una table de libgdx con cuatro botones, pero a ver como se porta.
01/02/23
    Terminado el menu desplegable de construcción de torreta! Excepto que no es desplegable. Pero es perfectamente funcional!
    Haciendo el menu de construcción de torres, me preocupa que los botones sean demasiado pequeños así que los hago más grandes.
    Es demasiado fácil construir una torre encima de otra por error, voy a meter un botón de "destruir" en función de que el fundation tenga o no tenga torre.
03/02/23
    Botón para destruir torre (DestroyButton) añadido! Devuelve la mitad del coste original de la torre y despeja el fundation para poder construir una nueva torre.
    Añadidos ficheros de localización de idiomas. Se va a usar la clase de libGDX I18NBundle en vez del xml de string de android para que sea multiplataforma.
06/02/23
    Sticky tower ahora ralentiza a los enemigos, que cambian de color cuando sufren sus efectos.
    Rebalance de stats. Ganar no resulta complicado, pero sacar una puntuación perfecta tiene más truco.
    Cambios en la gestión de inputs de GameUi para hacer las interacciones más fluidas.
07/02/23
    Ahora hay una pantalla de "ready" para que el jugador pueda prepararse y otras dos de game over y de victoria.
    Para mejorar la usabilidad, los botones de construir torre ahora indican el precio de la misma. En amarillo si se tiene suficiente oro y en rojo si no.
    Mejoras generales de claridad y simplicidad de código. Le hacía falta.