09/01/23
    Definición de clases, estructura general del proyecto.
    La clase InputHandler probablemente no sea necesaria.
    Sentimiento de arrepentimiento por la escala del juego. Debería haberme limitado a un Space Invaders.
11/01/23
    Reestructuración del proyecto y de los planteamientos. Algunas ideas no eran tan buenas en retrospectiva.
    Se opta por cambiar la orientación del juego a vertical, se aprovecha mucho mejor el espacio.
    El espacio para la UI es un problema, hay que simplificar la interfaz y el número de espacios que se
    pueden pulsar planteados.
    Creación del tilemap del primer nivel en Tiled, y renderizado con éxito.
    Falta la capa de objetos del Tiled.
13/01/23
    Se elimina InputHandler, al menos por ahora. Demasiado caos de clases.
    Nueva clase: LevelCreator. Gestiona la carga de cada mapa y parsea la capa de objetos de
    los mapas del Tiled.
    Se replantean algunos conceptos del juego. Las colisiones entre unidades limitan el diseño,
    se deshechan. Ahora puedo añadir torres que reduzcan la velocidad de los enemigos sin preocuparme por
    que se hagan bodyblocking entre ellos.
17/01/23
    Reestructuración del mapa en el Tiled. Organización de las capas de objetos, ajustados los hitbox.
    Definición de las clases de enemigos, de la clase Tile, Direction y Type.
    Definición de la clase Tower, pero le falta trabajo.
    Se crea la clase Debuff para gestionar estados especiales que las torres ponen en los enemigos.
    Definición clase Stats para guardar variables útiles.
    Se hace una primera prueba básica del funcionamiento del juego con un solo enemigo
    y sin torres, ¡funciona!
18/01/23
    Los enemigos ya son capaces de navegar el nivel siguiendo el camino sin mayor problema.
    Probando la velocidad de los enemigos hasta encontrar el balance correcto.
    Hay que hacer limpieza del código, las variables están en público y privado sin mucho sentido.
    Los proyectiles de las torres presentan un nuevo desafío. Debo pensar como plantearlo.
23/01/23
    Spritesheets para todos los enemigos.
    Nueva clase WaveManager para gestionar comodamente las oleadas.
    Los enemigos ahora desaparecen al llegar al final del nivel.
    Limpieza general de código en las clases de Enemy y derivadas.
24/01/23
    Spritesheets para todas las torres.
    Definición de clases para las torres WitchTower, StickyTower y CyclopTower, con sus correspondientes estadísticas en Stats.
28/01/23
    Los proyectiles de las torres, tras mucho esfuerzo, vuelan gracilmente de la torre a su objetivo sin problema. Un hurra para mí.
    Prueba y error para encontrar un balance provisional para las stats de las torres. Necesitaré seguir toqueteandolo a medida que avanza el desarrollo.
30/01/23
    He descubierto una forma de aprovechar mejor libGDX y la gestión de eventos sin tantas clases auxiliares gracias a las clases Stage y Actor propias del framework.
    El core gameplay más básico esta listo: Los enemigos se mueven, las torres disparan, el jugador puede construir nuevas torres.
    Añadida la clase GameUi para gestionar las acciones del jugador, botones y demás.
    ¿Como va a ser el menu desplegable para seleccionar que torreta construir? Probablemente use una table de libgdx con cuatro botones, pero a ver como se porta.
01/02/23
    Terminado el menu desplegable de construcción de torreta! Excepto que no es desplegable. Pero es perfectamente funcional!
    Haciendo el menu de construcción de torres, me preocupa que los botones sean demasiado pequeños así que los hago más grandes.
    Es demasiado fácil construir una torre encima de otra por error, voy a meter un botón de "destruir" en función de que el fundation tenga o no tenga torre.
03/02/23
    Botón para destruir torre (DestroyButton) añadido! Devuelve la mitad del coste original de la torre y despeja el fundation para poder construir una nueva torre.
    Añadidos ficheros de localización de idiomas. Se va a usar la clase de libGDX I18NBundle en vez del xml de string de android para que sea multiplataforma.
06/02/23
    Sticky tower ahora ralentiza a los enemigos, que cambian de color cuando sufren sus efectos.
    Rebalance de stats. Ganar no resulta complicado, pero sacar una puntuación perfecta tiene más truco.
    Cambios en la gestión de inputs de GameUi para hacer las interacciones más fluidas.
07/02/23
    Ahora hay una pantalla de "ready" para que el jugador pueda prepararse y otras dos de game over y de victoria.
    Para mejorar la usabilidad, los botones de construir torre ahora indican el precio de la misma. En amarillo si se tiene suficiente oro y en rojo si no.
    Mejoras generales de claridad y simplicidad de código. Le hacía falta.
08/02/23
    Mejoras generales de la UI, ahora hay iconos animados para el oro y las vidas gracias a la clase SimpleIcon.
09/02/23
    Ahora las fundation reproducen una pequeña animación al seleccionarse para que sea más claro cual es la que ha pulsado el jugador.
    ¡Nueva habilidad! Al pulsar el botón Rage (o agitar el movil), si se tiene suficiente oro, las torres atacarán mucho más rapido durante unos segundos.
    Se han comentado apropiadamente las clases en enemies y tiles.
13/02/23
    Se descarta la mecánica del Loot. Rage es más interesante y más intuitivo, y requiere que el usuario maree menos el teléfono agitandolo.
    Se borran las clases y menciones a la mecánica del Loot en el código.
    Mejoras en el código del renderizado, ahora es más eficiente.
    Ahora los enemigos y las torres se 'mueven' (velocidad de la animación) más rápido o lento según el estado (rage/ralentizado).
    Ahora el botón Rage puede activarse agitandose!
    Añadida nueva pantalla, MainMenuScreen! Ahora el juego se iniciará al menú en vez de directamente al juego.
14/02/23
    Añadido vibrador: El móvil vibra al pulsar el botón Rage (o agitar el móvil) y cada vez que un enemigo escapa.
    Corregido problema importante de rendimiento con las Skin: Debo ser más cuidadoso a la hora de gestionar recursos.
    Añadido el segundo mapa! Es completamente jugable.
    Implementado un selector de nivel un tanto rudimentario con ChooseLevelScreen y ChooseLevel.
    Continuando el trabajo de comentar las clases. Stats y LevelCreator comentadas.
15/02/23
    Añadida música para el menú principal y cada uno de los niveles disponibles por el momento.
    Añadidos varios sonidos: Disparos, muertes, construccion, seleccion fundation, destrucción de torres...
    Ahora se puede volver al menú principal tras terminar un nivel (ya no hace falta cerrar y volver a abrir el juego).
16/02/23
    ¡Añadido tercer mapa, la mazmorra! Como twist, el recorrido entra y sale de la pantalla.
17/02/23
    ¡Añadido cuarto mapa, la aldea! El primer mapa con doble spawn y doble de enemigos apareciendo al mismo tiempo
    Ahora los menús deberían quedar bastante mejor cuadrados (pasé a usar la clase table de libgdx para organizarlos)
    Se crean los strings de localización para los menús y elementos de la interfaz que faltan (por el momento).
20/02/23
    Añadido menú de opciones: Ahora se puede cambiar el idioma y activar/desactivar música y sonidos.
    Añadida persistencia de datos: Se guardan los records y las preferencias de opciones de usuario.
22/02/23
    Añadido menú de records: Ahora se pueden consultar las puntuaciones máximas para cada nivel.
    Añadido menú de créditos: Ahora se pueden ver los créditos.
    Añadida memoria del proyecto (archivo 'memory').
    Terminados todos los archivos de strings de localización para los tres idiomas.
23/02/23
    Se termina de comentar todas las clases. Son 44 clases comentadas, Javi. Ya las puedes leer todas.
    Actualizado el menú principal con una bruja para que el jugador no se sienta solo.
    Actualizado el menú de creditos para que se vea un poco mejor.
    Añadida splash screen (pantalla de 'carga' de inicio).
    Añadido tutorial. Una cantidad ingente de texto traducida a tres idiomas, valoramelo Javi porfa.
24/02/23
    Añadido efecto parallax en la pantalla del menú in extremis.
    Añadido javadoc en carpeta comprimida.

TODO LIST
    - Grabar el gameplay